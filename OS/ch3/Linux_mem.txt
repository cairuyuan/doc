1
linux没有采用分段机制，所以逻辑地址和虚拟地址（线性地址）是一个概念

内核的虚拟地址和物理地址，大部分只差一个线性偏移量。

用户空间的虚拟地址和物理地址则采用了多级页表进行映射，但仍称之为线性地址。



3
Linux内核虚拟地址空间划分0~3G为用户空间，3~4G为内核空间，此空间又划分为三种类型的区：
ZONE_DMA 	3G之后起始的16MB
ZONE_NORMAL 	16MB~896MB
ZONE_HIGHMEM 	896MB ~1G

高端内存HIGH_MEM地址空间范围为 0xF8000000 ~ 0xFFFFFFFF（896MB～1024MB），128MB。当内核想访问高于896MB物理地址内存时，从0xF8000000 ~ 0xFFFFFFFF地址空间范围内找一段相应大小空闲的逻辑地址空间，借用一会。
借用这段逻辑地址空间，建立映射到想访问的那段物理内存（即填充内核PTE页面表），临时用一会，用完后归还。这样别人也可以借用这段地址空间访问其他物理内存，实现了使用有限的地址空间，访问所有所有物理内存



4
http://www.cnblogs.com/zhaoyl/p/3695517.html




5
 在保护模式下，无论CPU运行于用户态还是核心态，CPU执行程序所访问的地址都是虚拟地址，MMU 读取控制寄存器CR3中的值作为当前页面目录的指针，进而根据分页内存映射机制（参看相关文档）将该虚拟地址转换为真正的物理地址才能让CPU真 正的访问到物理地址。

*进程寻址空间0~4G  
*进程在用户态只能访问0~3G，只有进入内核态才能访问3G~4G  
*进程通过系统调用进入内核态
*每个进程虚拟空间的3G~4G部分是相同的  
*进程从用户态进入内核态不会引起CR3的改变但会引起堆栈的改变



6
控制寄存器（CR0～CR3）用于控制和确定处理器的操作模式以及当前执行任务的特性。

CR0中含有控制处理器操作模式和状态的系统控制标志；
CR1保留不用；
CR2含有导致页错误的线性地址；
CR3中含有页目录表物理内存基地址，也被称为页目录基地址寄存器PDBR