1
每个程序都有自己的局部描述符表：LDT。LDTR寄存器指出当前的进程的LDT的位置，实际上是在GDT中的位置

使用某个程序的代码段，数据段，堆栈段。。。之前需要把对应的段选择子"装入"



2
选择子为16位，GDT和LDT使用统一格式由低三位区分。将选择字的低三位清除，将LDT的表地址（LDTR确定）加上，得到描述符的指针。

描述符中，有该段的属性值，包括：段基值、段长度(limit域)、权限等。段内的偏移量从零开始，由程序的编写情况确定，顺序增加。。。

偏移量和基值相加得到32位的线性地址，虚地址，再经过页表转换--使用的分页，或不转换--无分页，得到物理地址



3
在保护模式下，段是实现虚拟地址到线性地址转换的基础。每个段有三个参数：段基址，段界限，段属性。

段基址规定了线性地址空间中段的开始地址，段基址长度为32位，所以任何一个段都可以从32位线性地址空间中的任何一个字节开始

段界限用20位表示，而且段界限可以是字节或4K为单位，这个称为段的粒度。当段界限以字节为单位时，那么段的范围是1字节至1M字节；当段界限是以4K字节为单位时，那么段的范围是4K至4G。段的界限同时也是用来校验偏移地址的合法性

数据段有点特殊，因为数据段的偏移范围不仅仅是由段界限来决定，还要由段的扩展方向来决定。扩展方向为向高端地址扩展，是一普通的数据段，0-Limit是有效的偏移范围，而Limit以上属于无效的偏移范围。扩展方向为向低端地址扩展，是堆栈段，0-Limit是无效的偏移范围，Limit以上则属于有效的偏移范围。堆栈段是一种特殊的数据段，它是向低端地址扩展



4
段基址，段界限及段属性这三个参数在保护模式下用描述符来描述，每个描述符的长度为8个字节，每个段都有一个对应的描述符。在保护模式下有三种描述符：存储段描述符，系统段描述符，门描述符。



5
存储段描述符：存储段是指程序直接执行的代码段和数据段，存储段描述符是用来描述存储段的，也可以说是用来描述代码和数据段的，它的长度为8个字节，该描述符结构示意图：
    
    第7字节  第6字节  第5字节     第4字节  第3字节  第2字节   第1字节  第0字节
   |--------|------------------|-----------------------------|-----------------|
   |段基址的|                  |                             |                 |
   |高8位   |Segment Attributes|       段基址的低24位        | 段界限的低16位  |
   | 24~31  |   段属性，占用两 |         0~23                |      0~15       |
   |        |   个字节         |                             |                 |
   |--------|------------------|-----------------------------|-----------------|
            |                  | 
            |                  | 
   _________|                  |_____________________________
   | 15  14 13  12 11            8 7 6     5   3           0|
   |---|---|---|---|-------------|---|--- -|---|------------|
   | G | D |0  |AVL|段界限的高4位| P | DPL |DT |    TYPE    |
   |---|---|---|---|--- ---------|---|-----|---|------------|