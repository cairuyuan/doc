1
map 单次接受一个参数
reduce 则是两个

fileter接受一个函数和一个列表，根据函数的返回结果true或false，决定是否采用列表元素，返回新的列表



2
闭包，可以认为是，由函数和相关的引用环境结合而成的的实体
	def make_adder(addend):
	    def adder(augend):
	        return augend + addend
	    return adder

	p = make_adder(23)
	q = make_adder(44)

	print p(100)
	print q(100)

	外部传递过来的addend参数已经和adder函数绑定到一起了,形成了一个新函数,我们可以把addend看做新函数的一个配置信息,配置信息不同,函数的功能就不一样了

装饰器也是一种闭包，顶层参数和内部定义的函数（作为返回），一起构成了新的函数，他随着顶层参数的变化，函数功能也在变化



3
匿名函数只有一个表达式，就作为返回值，不用写return